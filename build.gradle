/*
 * Copyright 2023 Szymon Micyk
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'groovy'
    id 'java-library'
    id 'idea'
    id 'eclipse'
    id 'codenarc'
    id 'pl.allegro.tech.build.axion-release' version '1.16.1'

    id 'maven-publish'
    id 'ivy-publish'

    id 'signing'
}

repositories {
    mavenCentral()
}

scmVersion {
    tag {
        prefix = 'v'
        versionSeparator = ''
        initialVersion { config, position -> '0.8.0' }
    }
    // produce SNAPSHOT version when there are any changes in the code
    ignoreUncommittedChanges = false

    hooks {
        pre 'commit', { version, position -> "Release $version"}
    }
}

project.group = 'net.simonix.scripts'
project.version = scmVersion.version

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

dependencies {
    implementation ('org.codehaus.groovy:groovy-all:3.0.20')

    implementation ('org.apache.jmeter:ApacheJMeter_core:5.6.3')
    implementation ('org.apache.jmeter:ApacheJMeter_java:5.6.3')
    implementation ('org.apache.jmeter:ApacheJMeter_components:5.6.3')
    implementation ('org.apache.jmeter:ApacheJMeter_http:5.6.3')
    implementation ('org.apache.jmeter:ApacheJMeter_functions:5.6.3')
    implementation ('org.apache.jmeter:ApacheJMeter_config:5.6.3')
    implementation ('org.apache.jmeter:ApacheJMeter_jdbc:5.6.3')

    implementation ('info.picocli:picocli:4.6.3')
    implementation ('info.picocli:picocli-groovy:4.6.3')

    // testing and mocking
    testImplementation platform ('org.spockframework:spock-bom:2.3-groovy-3.0')
    testImplementation ('org.spockframework:spock-core')
    testImplementation ('org.spockframework:spock-junit4')

    testImplementation ('org.mock-server:mockserver-netty:5.11.2')
    testImplementation ('org.mock-server:mockserver-client-java:5.11.2')
    testImplementation ('org.mock-server:mockserver-junit-rule:5.11.2')

    testImplementation ('org.xmlunit:xmlunit-core:2.8.2')
    testImplementation ('com.h2database:h2:1.4.200')
}

configurations {
    all*.exclude group: 'xml-apis'
    all*.exclude group: 'xerces'
    // it must be added since JMeter has broken build, see https://bz.apache.org/bugzilla/show_bug.cgi?id=64465
    all*.exclude group: 'org.apache.jmeter', module: 'bom'
}

codenarc {
    toolVersion = '3.4.0'
    configFile = file("${rootProject.projectDir}/config/codenarc/rules.groovy")
    reportFormat = 'html'
    ignoreFailures = true
}

codenarcMain {
    compilationClasspath = sourceSets.main.compileClasspath + sourceSets.main.output
}

codenarcTest {
    compilationClasspath = codenarcMain.compilationClasspath + sourceSets.test.compileClasspath + sourceSets.test.output
}

//* Test configuration *//
tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        events 'started', 'passed'
    }
}

tasks.named('jar') {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version
        )
    }
}

groovydoc {
    docTitle 'Groovy JMeter DSL Specification'
    overviewText project.resources.text.fromFile('src/groovydoc/resources/overview-summary.html')
    windowTitle 'Groovy JMeter DSL'
    footer 'Szymon Micyk'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allGroovy
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from groovydoc
    archiveClassifier = 'javadoc'
}

publishing {
    repositories {
        ivy {
            artifactPattern "${System.properties['user.home']}/.groovy/grapes/[organization]/[module]/jars/[artifact]-[revision](.[ext])"
            ivyPattern "${System.properties['user.home']}/.groovy/grapes/[organization]/[module]/ivy-[revision].xml"
        }
        maven {
            credentials {
                username = System.getenv('MAVEN_USERNAME') ?: ''
                password = System.getenv('MAVEN_PASSWORD') ?: ''
            }

            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
    publications {
        ivy(IvyPublication) {
            organisation = project.group
            module = 'groovy-jmeter'
            revision = project.version

            descriptor.status = 'release'

            from components.java
        }
        maven(MavenPublication) {
            groupId = project.group
            artifactId = 'groovy-jmeter'
            version = project.version
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'groovy-jmeter'
                description = 'A Groovy-based DSL for building and running JMeter test plans from command line and more'
                url = 'https://github.com/smicyk/groovy-jmeter'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'smicyk'
                        name = 'Szymon Micyk'
                        email = 'szymon.micyk@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/smicyk/groovy-jmeter'
                    developerConnection = 'scm:git:ssh://github.com/smicyk/groovy-jmeter'
                    url = 'https://github.com/smicyk/groovy-jmeter'
                }
            }
        }
    }
}

// disable gradle module metadata to make Ivy custom publication working
tasks.withType(GenerateModuleMetadata) {
    enabled = false
}

signing {
    required { gradle.taskGraph.hasTask('publishMavenPublicationToMavenRepository') }
    sign publishing.publications.maven
}
